apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-checkout
spec:
  params:
    - name: gitRepositoryUrl
      description: Git source code repository url
    - name: gitRevision
      description: Git source revision
    - name: gitRepositoryDeleteExisting
      description: Clean out of the destination directory if it already exists before cloning
      default: "true"
    - name: gitCheckoutSubDirectory
      description: Subdirectory in the source directory to clone Git repository
      default: ""
    - name: secretNameGitToken
      description: Git token sercret name
  workspaces:
    - name: shared
  results:
    - name: gitCommitId
      description: Git commit ID that was checked out by this Task
    - name: gitCheckoutDirectory
      description: The directory that was cloned repository by this Task
  steps:
    - name: clean-dir
      image: docker:git
      env:
        - name: GIT_REPO_DELETE_EXISTING
          value: $(params.gitRepositoryDeleteExisting)
        - name: GIT_CHECKOUT_DIR
          value: $(workspaces.shared.path)/source/$(params.gitCheckoutSubDirectory)
      script: |
        if [ "${GIT_REPO_DELETE_EXISTING}" = "true" ]; then
          if [ -d "${GIT_CHECKOUT_DIR}" ]; then
            # Delete non-hidden files and directories
            rm -rf "${GIT_CHECKOUT_DIR:?}"/*
            # Delete files and directories starting with . but excluding ..
            rm -rf "${GIT_CHECKOUT_DIR}"/.[!.]*
            # Delete files and directories starting with .. plus any other character
            rm -rf "${GIT_CHECKOUT_DIR}"/..?*
          fi
        fi
    - name: git-clone
      image: docker:git
      env:
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: $(params.secretNameGitToken)
        - name: GIT_CHECKOUT_DIR
          value: $(workspaces.shared.path)/source/$(params.gitCheckoutSubDirectory)
      args:
        - clone
        - https://$(GIT_TOKEN)@$(params.gitRepositoryUrl)
        - $(GIT_CHECKOUT_DIR)
      command:
        - /usr/bin/git
    - name: git-checkout
      image: docker:git
      script: |
        cd ${GIT_CHECKOUT_DIR}
        git fetch origin $(params.gitRevision)
        git checkout $(params.gitRevision)
        git rev-parse $(params.gitRevision) | tr -d '\n' | tee $(results.gitCommitId.path)
        echo ""
        echo -n ${GIT_CHECKOUT_DIR} | tee $(results.gitCheckoutDirectory.path)
      env:
        - name: GIT_CHECKOUT_DIR
          value: $(workspaces.shared.path)/source/$(params.gitCheckoutSubDirectory)
